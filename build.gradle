//  Copyright 2019 Christian Schmitz
//  SPDX-License-Identifier: Apache-2.0

plugins {
    id 'com.android.application' version '4.0.1' apply false
    id 'org.jetbrains.kotlin.jvm' version '1.3.72' apply false
    id 'org.jetbrains.dokka' version '0.10.1'
    id 'xyz.tynn.jvm.kdoc' version '0.1.0' apply false
    id 'xyz.tynn.idea.fix' version '0.1.2'
}

allprojects {
    repositories {
        google()
        mavenCentral()
        jcenter()
    }

    plugins.withId('org.jetbrains.dokka') {
        dokka {
            configuration {
                externalDocumentationLink {
                    url = new URL('https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/')
                    packageListUrl = new URL(url, 'package-list')
                }
            }
        }
    }
}

subprojects {
    group = 'xyz.tynn.coana'

    tasks.withType(Test) {
        testLogging {
            events "failed"
            exceptionFormat "full"
            showCauses true
            showExceptions true
            showStackTraces true
        }
    }

    plugins.withId('kotlin') {
        project.apply plugin: 'jacoco'
        project.apply plugin: 'maven-publish'

        java {
            withKdocJar()
            withSourcesJar()
        }

        publishing {
            publications {
                kotlinJvm(MavenPublication) {
                    from components.java
                }
            }
        }

        dependencies {
            testImplementation 'org.jetbrains.kotlin:kotlin-test-junit'
        }
    }

    plugins.withType(JacocoPlugin) {
        jacoco.toolVersion = '0.8.5'

        tasks.withType(JacocoReport) {
            check.dependsOn it
            reports.xml.enabled true
        }
    }

    plugins.withType(MavenPublishPlugin) {
        rootProject.dokka.subProjects += project.name
        project.apply plugin: 'xyz.tynn.jvm.kdoc'
        project.apply from: "$rootDir/publish.gradle"
    }
}

dokka {
    outputFormat = 'html'
    outputDirectory = "$buildDir/docs"
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
