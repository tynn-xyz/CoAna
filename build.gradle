//  Copyright 2019 Christian Schmitz
//  SPDX-License-Identifier: Apache-2.0

buildscript {
    repositories {
        google()
        jcenter()
    }

    dependencies {
        classpath Deps.android.plugin
    }
}

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.50' apply false
    id 'org.jetbrains.dokka' version '0.10.0'
}

repositories.jcenter()

dokka {
    outputFormat = 'html'
    outputDirectory = "$buildDir/docs"
}

subprojects {
    repositories {
        google()
        jcenter()
    }

    plugins.withId('kotlin') {
        project.apply {
            plugin 'org.jetbrains.dokka'
            plugin 'jacoco'
        }

        dependencies {
            implementation Deps.kotlin.stdlib
            testImplementation Deps.kotlin.test.junit
        }
    }

    plugins.withType(com.android.build.gradle.BasePlugin) {
        project.apply plugin: 'kotlin-android'

        android {
            compileSdkVersion 29

            defaultConfig {
                minSdkVersion 14
                targetSdkVersion 29
                testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
            }

            sourceSets.all {
                it.java.srcDirs += it.java.srcDirs.findResults {
                    it.name == 'java' ? "$it.parent/kotlin" : null
                }
            }
        }

        dependencies {
            implementation Deps.kotlin.stdlib
        }
    }

    plugins.withId('org.jetbrains.dokka') {
        rootProject.dokka.subProjects += project.name

        dokka {
            outputFormat = 'html'
            outputDirectory = "$buildDir/kdoc"
        }

        tasks.register('dokkaJar', Jar) {
            dependsOn dokka
            classifier 'kdoc'
            from fileTree(dokka.outputDirectory)
        }
    }

    plugins.withType(JacocoPlugin) {
        jacoco.toolVersion = '0.8.4'

        tasks.withType(JacocoReport) {
            check.dependsOn it
            reports {
                csv.enabled false
                html.enabled true
                xml.enabled true
            }
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
